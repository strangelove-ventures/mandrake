openapi: 3.1.1
info:
  title: Mandrake API
  description: |
    API for the Mandrake project, providing RESTful endpoints for managing workspaces, 
    models, sessions, tools, and other functionality.
  version: 1.0.0
  contact:
    name: Strangelove Ventures
    url: https://github.com/strangelove-ventures/mandrake
servers:
  - url: /api
    description: Default API path
paths:
  /system:
    get:
      summary: Get system information
      description: Returns basic information about the Mandrake system.
      operationId: getSystemInfo
      tags:
        - System
      responses:
        '200':
          description: System information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInfo'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/config:
    get:
      summary: Get system configuration
      description: Returns the current system configuration.
      operationId: getSystemConfig
      tags:
        - System
      responses:
        '200':
          description: System configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfig'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update system configuration
      description: Updates the system configuration.
      operationId: updateSystemConfig
      tags:
        - System
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemConfig'
      responses:
        '200':
          description: Updated system configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/tools/operations:
    get:
      summary: List available tool operations
      description: Returns a list of all available tool operations at the system level.
      operationId: listSystemToolOperations
      tags:
        - System
        - Tools
      responses:
        '200':
          description: List of tool operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolOperation'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/tools/configs:
    get:
      summary: List tool configurations
      description: Returns a list of all tool configurations at the system level.
      operationId: listSystemToolConfigs
      tags:
        - System
        - Tools
      responses:
        '200':
          description: List of tool configurations
          content:
            application/json:
              schema:
                type: object
                properties:
                  configs:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/ToolConfig'
                  active:
                    type: string
                    description: ID of the active tool configuration set
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create tool configuration
      description: Creates a new tool configuration at the system level.
      operationId: createSystemToolConfig
      tags:
        - System
        - Tools
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolConfigCreateRequest'
      responses:
        '201':
          description: Created tool configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/tools/configs/{configId}:
    get:
      summary: Get tool configuration
      description: Returns a specific tool configuration by ID at the system level.
      operationId: getSystemToolConfig
      tags:
        - System
        - Tools
      parameters:
        - name: configId
          in: path
          required: true
          description: ID of the tool configuration
          schema:
            type: string
      responses:
        '200':
          description: Tool configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/tools/active:
    put:
      summary: Set active tool configuration
      description: Sets the active tool configuration at the system level.
      operationId: updateSystemActiveToolConfig
      tags:
        - System
        - Tools
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                configId:
                  type: string
                  description: ID of the tool configuration to set as active
              required:
                - configId
      responses:
        '200':
          description: Updated active tool configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  active:
                    type: string
                    description: ID of the active tool configuration
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/models:
    get:
      summary: List available models
      description: Returns a list of all available models at the system level.
      operationId: listSystemModels
      tags:
        - System
        - Models
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsConfig'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/models/active:
    get:
      summary: Get active model
      description: Returns the currently active model at the system level.
      operationId: getSystemActiveModel
      tags:
        - System
        - Models
      responses:
        '200':
          description: Active model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Set active model
      description: Sets the active model at the system level.
      operationId: updateSystemActiveModel
      tags:
        - System
        - Models
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                modelId:
                  type: string
                  description: ID of the model to set as active
              required:
                - modelId
      responses:
        '200':
          description: Updated active model
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/prompt:
    get:
      summary: Get system prompt configuration
      description: Returns the prompt configuration at the system level.
      operationId: getSystemPromptConfig
      tags:
        - System
        - Prompt
      responses:
        '200':
          description: Prompt configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptConfig'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update system prompt configuration
      description: Updates the prompt configuration at the system level.
      operationId: updateSystemPromptConfig
      tags:
        - System
        - Prompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptConfig'
      responses:
        '200':
          description: Updated prompt configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/sessions:
    get:
      summary: List system sessions
      description: Returns a list of all sessions at the system level.
      operationId: listSystemSessions
      tags:
        - System
        - Sessions
      responses:
        '200':
          description: List of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionInfo'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create system session
      description: Creates a new session at the system level.
      operationId: createSystemSession
      tags:
        - System
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the session
                metadata:
                  type: object
                  description: Additional metadata for the session
              required:
                - name
      responses:
        '201':
          description: Created session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/sessions/{sessionId}:
    get:
      summary: Get system session
      description: Returns a specific session by ID at the system level.
      operationId: getSystemSession
      tags:
        - System
        - Sessions
      parameters:
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      responses:
        '200':
          description: Session information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete system session
      description: Deletes a specific session by ID at the system level.
      operationId: deleteSystemSession
      tags:
        - System
        - Sessions
      parameters:
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      responses:
        '204':
          description: Session deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/sessions/{sessionId}/history:
    get:
      summary: Get system session history
      description: Returns the message history for a specific session at the system level.
      operationId: getSystemSessionHistory
      tags:
        - System
        - Sessions
      parameters:
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      responses:
        '200':
          description: Session history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /system/sessions/{sessionId}/stream:
    post:
      summary: Stream system session
      description: |
        Streams a conversation with the LLM. This endpoint returns a stream of server-sent events.
      operationId: streamSystemSession
      tags:
        - System
        - Sessions
        - Streaming
      parameters:
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
      responses:
        '200':
          description: Stream of server-sent events
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-sent events stream
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces:
    get:
      summary: List workspaces
      description: Returns a list of all workspaces.
      operationId: listWorkspaces
      tags:
        - Workspaces
      responses:
        '200':
          description: List of workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkspaceInfo'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create workspace
      description: Creates a new workspace.
      operationId: createWorkspace
      tags:
        - Workspaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateRequest'
      responses:
        '201':
          description: Created workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}:
    get:
      summary: Get workspace
      description: Returns a specific workspace by ID.
      operationId: getWorkspace
      tags:
        - Workspaces
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: Workspace information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete workspace
      description: Deletes a specific workspace by ID.
      operationId: deleteWorkspace
      tags:
        - Workspaces
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '204':
          description: Workspace deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/config:
    get:
      summary: Get workspace configuration
      description: Returns the configuration for a specific workspace.
      operationId: getWorkspaceConfig
      tags:
        - Workspaces
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: Workspace configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update workspace configuration
      description: Updates the configuration for a specific workspace.
      operationId: updateWorkspaceConfig
      tags:
        - Workspaces
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceConfig'
      responses:
        '200':
          description: Updated workspace configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/tools/operations:
    get:
      summary: List workspace tool operations
      description: Returns a list of all available tool operations for a specific workspace.
      operationId: listWorkspaceToolOperations
      tags:
        - Workspaces
        - Tools
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: List of tool operations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToolOperation'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/tools/configs:
    get:
      summary: List workspace tool configurations
      description: Returns a list of all tool configurations for a specific workspace.
      operationId: listWorkspaceToolConfigs
      tags:
        - Workspaces
        - Tools
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: List of tool configurations
          content:
            application/json:
              schema:
                type: object
                properties:
                  configs:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/ToolConfig'
                  active:
                    type: string
                    description: ID of the active tool configuration set
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create workspace tool configuration
      description: Creates a new tool configuration for a specific workspace.
      operationId: createWorkspaceToolConfig
      tags:
        - Workspaces
        - Tools
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolConfigCreateRequest'
      responses:
        '201':
          description: Created tool configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /workspaces/{workspaceId}/tools/configs/{configId}:
    get:
      summary: Get workspace tool configuration
      description: Returns a specific tool configuration by ID for a specific workspace.
      operationId: getWorkspaceToolConfig
      tags:
        - Workspaces
        - Tools
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
        - name: configId
          in: path
          required: true
          description: ID of the tool configuration
          schema:
            type: string
      responses:
        '200':
          description: Tool configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
          
  /workspaces/{workspaceId}/models:
    get:
      summary: List workspace models
      description: Returns a list of all available models for a specific workspace.
      operationId: listWorkspaceModels
      tags:
        - Workspaces
        - Models
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: List of models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/prompt:
    get:
      summary: Get workspace prompt configuration
      description: Returns the prompt configuration for a specific workspace.
      operationId: getWorkspacePromptConfig
      tags:
        - Workspaces
        - Prompt
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: Prompt configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update workspace prompt configuration
      description: Updates the prompt configuration for a specific workspace.
      operationId: updateWorkspacePromptConfig
      tags:
        - Workspaces
        - Prompt
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptConfig'
      responses:
        '200':
          description: Updated prompt configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/files:
    get:
      summary: List workspace files
      description: Returns a list of all files in a specific workspace.
      operationId: listWorkspaceFiles
      tags:
        - Workspaces
        - Files
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: List of files
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create workspace file
      description: Creates a new file in a specific workspace.
      operationId: createWorkspaceFile
      tags:
        - Workspaces
        - Files
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreateRequest'
      responses:
        '201':
          description: Created file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/dynamic:
    get:
      summary: List workspace dynamic context methods
      description: Returns a list of all dynamic context methods in a specific workspace.
      operationId: listWorkspaceDynamicMethods
      tags:
        - Workspaces
        - Dynamic
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: List of dynamic context methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DynamicMethod'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create workspace dynamic context method
      description: Creates a new dynamic context method in a specific workspace.
      operationId: createWorkspaceDynamicMethod
      tags:
        - Workspaces
        - Dynamic
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicMethodCreateRequest'
      responses:
        '201':
          description: Created dynamic context method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicMethod'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/sessions:
    get:
      summary: List workspace sessions
      description: Returns a list of all sessions in a specific workspace.
      operationId: listWorkspaceSessions
      tags:
        - Workspaces
        - Sessions
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      responses:
        '200':
          description: List of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      summary: Create workspace session
      description: Creates a new session in a specific workspace.
      operationId: createWorkspaceSession
      tags:
        - Workspaces
        - Sessions
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the session
                metadata:
                  type: object
                  description: Additional metadata for the session
              required:
                - name
      responses:
        '201':
          description: Created session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/sessions/{sessionId}:
    get:
      summary: Get workspace session
      description: Returns a specific session by ID in a specific workspace.
      operationId: getWorkspaceSession
      tags:
        - Workspaces
        - Sessions
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      responses:
        '200':
          description: Session information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInfo'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Delete workspace session
      description: Deletes a specific session by ID in a specific workspace.
      operationId: deleteWorkspaceSession
      tags:
        - Workspaces
        - Sessions
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      responses:
        '204':
          description: Session deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/sessions/{sessionId}/history:
    get:
      summary: Get workspace session history
      description: Returns the message history for a specific session in a specific workspace.
      operationId: getWorkspaceSessionHistory
      tags:
        - Workspaces
        - Sessions
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      responses:
        '200':
          description: Session history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /workspaces/{workspaceId}/sessions/{sessionId}/stream:
    post:
      summary: Stream workspace session
      description: |
        Streams a conversation with the LLM in a specific workspace. 
        This endpoint returns a stream of server-sent events.
      operationId: streamWorkspaceSession
      tags:
        - Workspaces
        - Sessions
        - Streaming
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamRequest'
      responses:
        '200':
          description: Stream of server-sent events
          content:
            text/event-stream:
              schema:
                type: string
                description: Server-sent events stream
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details
      required:
        - error
        
    SystemInfo:
      type: object
      properties:
        version:
          type: string
          description: Version of the Mandrake API
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall system status
        services:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServiceStatus'
          description: Status of individual services
      required:
        - version
        - status

    ServiceStatus:
      type: object
      properties:
        isHealthy:
          type: boolean
          description: Whether the service is healthy
        statusCode:
          type: integer
          format: int32
          description: HTTP status code representing the health state
        message:
          type: string
          description: Human-readable status message
        details:
          type: object
          description: Additional status details specific to the service
      required:
        - isHealthy

    SystemConfig:
      type: object
      properties:
        home:
          type: string
          description: Path to the Mandrake home directory
        workspaces:
          type: object
          properties:
            directory:
              type: string
              description: Directory containing workspaces
          required:
            - directory
      required:
        - home
        - workspaces

    WorkspaceConfig:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the workspace
        name:
          type: string
          description: Name of the workspace
        description:
          type: string
          description: Description of the workspace
        path:
          type: string
          description: Path to the workspace directory
      required:
        - id
        - name
        - path

    WorkspaceInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the workspace
        name:
          type: string
          description: Name of the workspace
        description:
          type: string
          description: Description of the workspace
        path:
          type: string
          description: Path to the workspace directory
        created:
          type: string
          format: date-time
          description: When the workspace was created
        updated:
          type: string
          format: date-time
          description: When the workspace was last updated
      required:
        - id
        - name
        - path

    WorkspaceCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the workspace
        description:
          type: string
          description: Description of the workspace
        path:
          type: string
          description: Custom path for the workspace (optional)
      required:
        - name

    ToolOperation:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tool operation
        name:
          type: string
          description: Name of the tool operation
        description:
          type: string
          description: Description of the tool operation
        server:
          type: string
          description: ID of the server providing this operation
        parameters:
          type: object
          description: JSON Schema for the operation parameters
        returns:
          type: object
          description: JSON Schema for the operation return value
        examples:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              parameters:
                type: object
              result:
                type: object
      required:
        - id
        - name
        - server
        - parameters

    ToolConfig:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tool configuration
        name:
          type: string
          description: Name of the tool configuration
        description:
          type: string
          description: Description of the tool configuration
        servers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServerConfig'
          description: Map of server configurations
      required:
        - id
        - name
        - servers

    ToolConfigCreateRequest:
      type: object
      properties:
        id:
          type: string
          description: ID for the new tool configuration set
        name:
          type: string
          description: Name of the tool configuration set
        description:
          type: string
          description: Description of the tool configuration set
        servers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServerConfig'
          description: Map of server configurations
      required:
        - id
        - name
        - servers

    ServerConfig:
      type: object
      properties:
        command:
          type: string
          description: Command to run the server
        args:
          type: array
          items:
            type: string
          description: Arguments for the server command
        enabled:
          type: boolean
          description: Whether the server is enabled
        retries:
          type: integer
          description: Number of retries on failure
        retryDelayMs:
          type: integer
          description: Delay between retries in milliseconds
      required:
        - command
        - args
        - enabled

    ModelsConfig:
      type: object
      properties:
        providers:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProviderConfig'
          description: Map of provider configurations
        models:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ModelInfo'
          description: Map of available models
        active:
          type: string
          description: ID of the active model
      required:
        - providers
        - models
        - active

    ProviderConfig:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the provider
        name:
          type: string
          description: Name of the provider
        type:
          type: string
          enum: [anthropic, openai, ollama, xai]
          description: Type of the provider
        apiKey:
          type: string
          description: API key for the provider (masked in responses)
        baseUrl:
          type: string
          description: Base URL for API requests
        models:
          type: array
          items:
            type: string
          description: List of supported model IDs
      required:
        - id
        - name
        - type

    ModelInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the model
        provider:
          type: string
          description: Provider ID for this model
        name:
          type: string
          description: Display name of the model
        contextWindow:
          type: integer
          description: Maximum context window size
        maxTokens:
          type: integer
          description: Maximum number of output tokens
      required:
        - id
        - provider
        - name

    PromptConfig:
      type: object
      properties:
        system:
          type: string
          description: System prompt text
        tools:
          type: boolean
          description: Whether to include tools in the prompt
        date:
          type: boolean
          description: Whether to include the current date in the prompt
        files:
          type: boolean
          description: Whether to include files in the prompt
        dynamic:
          type: boolean
          description: Whether to include dynamic context in the prompt
      required:
        - system

    SessionInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the session
        name:
          type: string
          description: Name of the session
        created:
          type: string
          format: date-time
          description: When the session was created
        updated:
          type: string
          format: date-time
          description: When the session was last updated
        messageCount:
          type: integer
          description: Number of messages in the session
        metadata:
          type: object
          description: Additional metadata about the session
      required:
        - id
        - name
        - created

    Message:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the message
        role:
          type: string
          enum: [user, assistant, system, tool]
          description: Role of the message sender
        content:
          type: string
          description: Content of the message
        toolCalls:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'
          description: Tool calls made in the message
        created:
          type: string
          format: date-time
          description: When the message was created
      required:
        - id
        - role
        - content
        - created

    ToolCall:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tool call
        server:
          type: string
          description: ID of the server handling the tool call
        method:
          type: string
          description: Name of the method being called
        parameters:
          type: object
          description: Parameters for the tool call
        result:
          type: object
          description: Result of the tool call
        error:
          type: string
          description: Error message if the tool call failed
      required:
        - id
        - server
        - method
        - parameters

    StreamRequest:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: Messages to include in the context
        model:
          type: string
          description: Optional model ID to use for this request
        options:
          type: object
          properties:
            temperature:
              type: number
              format: float
              minimum: 0
              maximum: 1
              description: Temperature for generation
            maxTokens:
              type: integer
              description: Maximum number of tokens to generate
            topP:
              type: number
              format: float
              minimum: 0
              maximum: 1
              description: Top-p sampling parameter
          description: Additional options for the request
      required:
        - messages

    FileInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the file
        name:
          type: string
          description: Name of the file
        path:
          type: string
          description: Path to the file
        content:
          type: string
          description: Content of the file
        created:
          type: string
          format: date-time
          description: When the file was created
        updated:
          type: string
          format: date-time
          description: When the file was last updated
      required:
        - id
        - name
        - path

    FileCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the file
        path:
          type: string
          description: Path within the workspace where the file should be created
        content:
          type: string
          description: Content of the file
      required:
        - name
        - content

    DynamicMethod:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the dynamic context method
        name:
          type: string
          description: Name of the dynamic context method
        description:
          type: string
          description: Description of what the method does
        path:
          type: string
          description: Path to the method implementation
        script:
          type: string
          description: Script code for the method implementation
      required:
        - id
        - name
        - description

    DynamicMethodCreateRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the dynamic context method
        description:
          type: string
          description: Description of what the method does
        script:
          type: string
          description: Script code for the method implementation
      required:
        - name
        - description
        - script

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  /workspaces/{workspaceId}/tools/configs/{configId}:
    get:
      summary: Get workspace tool configuration
      description: Returns a specific tool configuration by ID for a specific workspace.
      operationId: getWorkspaceToolConfig
      tags:
        - Workspaces
        - Tools
      parameters:
        - name: workspaceId
          in: path
          required: true
          description: ID of the workspace
          schema:
            type: string
        - name: configId
          in: path
          required: true
          description: ID of the tool configuration
          schema:
            type: string
      responses:
        '200':
          description: Tool configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'